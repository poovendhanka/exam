{"ast":null,"code":"var _jsxFileName = \"D:\\\\CapGemini\\\\examly\\\\Notes-keepClone\\\\note-keepclone\\\\src\\\\components\\\\SwipeDrawer.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport MuiDrawer from '@mui/material/Drawer';\n\n//components\nimport HeaderBar from './HeaderBar';\nimport NavList from './NavList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst openedMixin = theme => ({\n  width: drawerWidth,\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  overflowX: 'hidden'\n});\nconst closedMixin = theme => ({\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  }),\n  overflowX: 'hidden',\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up('sm')]: {\n    width: `calc(${theme.spacing(9)} + 1px)`\n  }\n});\nconst DrawerHeader = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    ...theme.mixins.toolbar\n  };\n});\n_c = DrawerHeader;\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: prop => prop !== 'open'\n})(_ref2 => {\n  let {\n    theme,\n    open\n  } = _ref2;\n  return {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    ...(open && {\n      ...openedMixin(theme),\n      '& .MuiDrawer-paper': openedMixin(theme)\n    }),\n    ...(!open && {\n      ...closedMixin(theme),\n      '& .MuiDrawer-paper': closedMixin(theme)\n    })\n  };\n});\n_c2 = Drawer;\nfunction SwipeDrawer() {\n  _s();\n  // const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawer = () => {\n    setOpen(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(HeaderBar, {\n      open: open,\n      handleDrawer: handleDrawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(SwipeDrawer, \"dVkDIfRb5RN4FjtonjBYYwpg89o=\");\n_c3 = SwipeDrawer;\nexport default SwipeDrawer;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DrawerHeader\");\n$RefreshReg$(_c2, \"Drawer\");\n$RefreshReg$(_c3, \"SwipeDrawer\");","map":{"version":3,"names":["React","styled","Box","MuiDrawer","HeaderBar","NavList","drawerWidth","openedMixin","theme","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","mixins","toolbar","Drawer","shouldForwardProp","prop","open","flexShrink","whiteSpace","boxSizing","SwipeDrawer","setOpen","useState","handleDrawer","prevState","display"],"sources":["D:/CapGemini/examly/Notes-keepClone/note-keepclone/src/components/SwipeDrawer.jsx"],"sourcesContent":["import * as React from 'react';\nimport { styled} from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport MuiDrawer from '@mui/material/Drawer';\n\n//components\nimport HeaderBar from './HeaderBar';\nimport NavList from './NavList';\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme) => ({\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n    }),\n    overflowX: 'hidden',\n});\n\nconst closedMixin = (theme) => ({\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: `calc(${theme.spacing(7)} + 1px)`,\n    [theme.breakpoints.up('sm')]: {\n        width: `calc(${theme.spacing(9)} + 1px)`,\n    },\n});\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    ...theme.mixins.toolbar,\n}));\n\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n        boxSizing: 'border-box',\n        ...(open && {\n            ...openedMixin(theme),\n            '& .MuiDrawer-paper': openedMixin(theme),\n        }),\n        ...(!open && {\n            ...closedMixin(theme),\n            '& .MuiDrawer-paper': closedMixin(theme),\n        }),\n    }),\n);\n\nfunction SwipeDrawer() {\n   // const theme = useTheme();\n    const [open, setOpen] = React.useState(true);\n\n    const handleDrawer = () => {\n        setOpen(prevState => !prevState);\n    };\n\n    return (\n        <Box sx={{ display: 'flex' }}>\n            <HeaderBar\n                open={open}\n                handleDrawer={handleDrawer}\n            />\n            <Drawer variant=\"permanent\" open={open}>\n                <DrawerHeader></DrawerHeader>\n                <NavList />\n            </Drawer>\n        </Box>\n    );\n}\n\nexport default SwipeDrawer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}